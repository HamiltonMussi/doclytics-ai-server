// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  password  String
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  documents Document[]

  @@map("users")
}

model Document {
  id            String           @id @default(cuid())
  userId        String
  user          User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  fileName      String
  fileUrl       String
  extractedText String?          @db.Text
  summary       String?          @db.Text
  ocrStatus     OcrStatus        @default(PENDING)
  interactions  LlmInteraction[]
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt

  @@map("documents")
}

model LlmInteraction {
  id         String   @id @default(cuid())
  documentId String
  document   Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  question   String   @db.Text
  answer     String   @db.Text
  createdAt  DateTime @default(now())

  @@map("llm_interactions")
}

enum OcrStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}